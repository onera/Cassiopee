try:
    from KCore.config import *
except ModuleNotFoundError:
    pass
import os
USURP = False
STREAMLINE2 = True
dirName = os.path.dirname(__file__)+'/Post'

#==============================================================================
# Fichiers C++
#==============================================================================
cpp_srcs = ["Post/coarsen.cpp",
            "Post/refine.cpp",
            "Post/refineButterfly.cpp",
            "Post/selectCells.cpp",
            "Post/selectCellCenters.cpp",
            "Post/selectInteriorFaces.cpp",
            "Post/selectExteriorFaces.cpp",
            "Post/selectExteriorFacesStructured.cpp",
            "Post/selectExteriorElts.cpp",
            "Post/exteriorEltsStructured.cpp",
            "Post/frontFaces.cpp",
            "Post/Fortran/integStruct.cpp",
            "Post/Fortran/integUnstruct.cpp",
            "Post/integ.cpp",
            "Post/integNorm.cpp",
            "Post/integNormProd.cpp",
            "Post/integMoment.cpp",
            "Post/integMomentNorm.cpp",
            "Post/computeVariables.cpp",
            "Post/computeVariables2.cpp",
            "Post/computeGrad.cpp",
            "Post/computeGrad2.cpp",
            "Post/computeGradLSQ.cpp",
            "Post/computeNormGrad.cpp",
            "Post/computeDiv.cpp",
            "Post/computeDiv2.cpp",
            "Post/computeCurl.cpp",
            "Post/computeNormCurl.cpp",
            "Post/perlinNoise.cpp",
            "Post/zipper/Algorithm.cpp",
            "Post/zipper/Intersection.cpp",
            "Post/zipper/StructBlock.cpp",
            "Post/zipper/StructBlock_iblank.cpp",
            "Post/zipper/StructBlock_uns.cpp",
            "Post/zipper/StructBlock_string.cpp",
            "Post/zipper/CString.cpp",
            "Post/zipper/Pocket.cpp",
            "Post/zipper/SingleSegment.cpp",
            "Post/zipper/TriangleZ.cpp",
            "Post/zipper/ZipLib.cpp",
            "Post/zipper/SegmentPair.cpp",
            "Post/zipper.cpp",
            "Post/extractPoint.cpp",
            "Post/extractMesh.cpp",
            "Post/projectCloudSolution2Triangle.cpp",
            "Post/extractPlane.cpp",
            "Post/cutPlane/cutPlane.cpp",
            "Post/cutPlane/PlaneIntersection.cpp",
            "Post/Stream/stream.cpp",
            "Post/Stream/StreamLine.cpp",
            "Post/Stream/StreamRibbon.cpp",
            "Post/Stream/StreamSurf.cpp",
            "Post/vertexInterp.cpp",
            "Post/isoLine.cpp",
            "Post/isoSurf.cpp",
            "Post/isoSurfMC.cpp",
            "Post/isoSurfNGon.cpp",
            "Post/computeDiff.cpp",
            "Post/computeIndicatorValue.cpp",
            "Post/enforceIndicatorNearBodies.cpp",
            "Post/enforceIndicatorForFinestLevel.cpp",
            "Post/enforceIndicatorForCoarsestLevel.cpp",
            "Post/sharpEdges.cpp",
            "Post/silhouette.cpp"]

if STREAMLINE2:
    cpp_srcs += [
        "Post/Stream2/face.cpp",
        "Post/Stream2/connectivity.cpp",
        "Post/Stream2/kdtree.cpp",
        "Post/Stream2/linear_algebra.cpp",
        "Post/Stream2/triangulated_polyhedron.cpp",
        "Post/Stream2/zone_data_view.cpp",
        "Post/Stream2/structured_data_view.cpp",
        "Post/Stream2/unstructured_data_view.cpp",
        "Post/Stream2/ngon_data_view.cpp",
        "Post/Stream2/stream_line.cpp",
        "Post/Stream2/py_stream_line.cpp",
        "Post/Stream2/write_svg.cpp",
        "Post/Stream2/volume.cpp",
        "Post/Stream2/rotational.cpp",
        "Post/Stream2/ribbon_stream_line.cpp",
        "Post/Stream2/py_streamribbon.cpp"]
else:
    cpp_srcs += [
        "Post/Stream2/py_stream_line_stub.cpp",
        "Post/Stream2/py_stream_ribbon_stub.cpp"]

if USURP and f90compiler != "None" and os.access(dirName+'/usurp', os.F_OK):
    cpp_srcs.append("Post/usurp.cpp")
    cpp_srcs += ["Post/usurp/Ctype.cpp",
                 "Post/usurp/Gpc.cpp",
                 "Post/usurp/Gpc_c_translator_clip.cpp",
                 "Post/usurp/Gpc_c_translator_strip.cpp",
                 "Post/usurp/Share_eps.cpp",
                 "Post/usurp/Triangle.cpp",
                 "Post/usurp/Triangle_translator_c.cpp"]
else: cpp_srcs.append("Post/usurpStub.cpp")

#==============================================================================
# Fichiers fortran
#==============================================================================
for_srcs = ['Post/Fortran/IntegStructF.for',
            'Post/Fortran/IntegUnstrF.for',
            'Post/Fortran/IntegNormStructF.for',
            'Post/Fortran/IntegNormUnstrF.for',
            'Post/Fortran/IntegNormProdStructF.for',
            'Post/Fortran/IntegNormProdUnstrF.for',
            'Post/Fortran/IntegMomentNormStructF.for',
            'Post/Fortran/IntegMomentNormUnstrF.for',
            'Post/Fortran/IntegMomentStructF.for',
            'Post/Fortran/IntegMomentUnstrF.for',
            'Post/Fortran/CompMeanCurlOfStructCellF.for',
            'Post/Fortran/CompMeanCurlOfTetraCellF.for',
            'Post/Fortran/CompInterfaceFieldF.for',
            'Post/Fortran/CompUnstrNodes2FacesF.for',
            'Post/Fortran/CompStructGradF.for',
            'Post/Fortran/CompStructGrad2DF.for',
            'Post/Fortran/CompStructGrad1DF.for',
            'Post/Fortran/CompUnstrGradF.for',
            'Post/Fortran/CompUnstrGrad2DF.for',
            'Post/Fortran/CompUnstrGrad1DF.for',
            'Post/Fortran/CompStructDivF.for',
            'Post/Fortran/CompStructDiv2DF.for',
            'Post/Fortran/CompUnstrDivF.for',
            'Post/Fortran/CompUnstrDiv2DF.for',
            'Post/Fortran/CompStructCurlF.for',
            'Post/Fortran/CompStructCurl2DF.for',
            'Post/Fortran/CompUnstrCurlF.for',
            'Post/Fortran/CompUnstrCurl2DF.for',
            'Post/zipper/ComputNormF.for',
            'Post/zipper/ConstrConnectF.for']

f90_srcs = []
if USURP and f90compiler != "None" and os.access(dirName+'/usurp', os.F_OK):
    f90_srcs = ['Post/usurp/IntrTypeM.f90',
                'Post/usurp/VertexDataM.f90',
                'Post/usurp/TypesM.f90',
                'Post/usurp/Sort2M.f90',
                'Post/usurp/My_cpu_timeM.f90',
                'Post/usurp/NetAllocM.f90',
                'Post/usurp/CalculatePolygonAreaM.f90',
                'Post/usurp/VolumeArraysM.f90',
                'Post/usurp/UserInputM.f90',
                'Post/usurp/TranslationArraysM.f90',
                'Post/usurp/TimeKeeperM.f90',
                'Post/usurp/RTreeTypesM.f90',
                'Post/usurp/RotateBackM.f90',
                'Post/usurp/PriPairsM.f90',
                'Post/usurp/PrintPolyM.f90',
                'Post/usurp/PatchInfoM.f90',
                'Post/usurp/OverlappedM.f90',
                'Post/usurp/GroupInfoM.f90',
                'Post/usurp/GraphProceduresM.f90',
                'Post/usurp/FoMoArraysM.f90',
                'Post/usurp/EdgeDataM.f90',
                'Post/usurp/ConvertPanelToPolygonM.f90',
                'Post/usurp/CheckPanelPairM.f90',
                'Post/usurp/CheckInputM.f90',
                'Post/usurp/CalculateVolumesM.f90',
                'Post/usurp/CommandLineM.f90',
                'Post/usurp/StructuredPatchProceduresM.f90',
                'Post/usurp/StorePatchesCFDSHIPM.f90',
                'Post/usurp/StorePatchesGenericM.f90',
                'Post/usurp/StorePatchesUNCLEM.f90',
                'Post/usurp/StorePatchesOVERFLOWM.f90',
                'Post/usurp/DPLRM.f90',
                'Post/usurp/TecplotTrianglesM.f90',
                'Post/usurp/WriteGridIBIM.f90',
                'Post/usurp/WritePatchesM.f90',
                'Post/usurp/WriteTriQM.f90',
                'Post/usurp/WritePanelWeightsM.f90',
                'Post/usurp/WriteMixsurFMPM.f90',
                'Post/usurp/UnusedVerticesM.f90',
                'Post/usurp/InsertNodeM.f90',
                'Post/usurp/CalculateForcesAndMomentsM.f90',
                'Post/usurp/CalculateProjectedAreasM.f90',
                'Post/usurp/CheckRatiosM.f90',
                'Post/usurp/CheckTrianglesM.f90',
                'Post/usurp/CreateNewNodeListM.f90',
                'Post/usurp/CutOutStringsM.f90',
                'Post/usurp/DefinePanelsM.f90',
                'Post/usurp/ExaminePrioritiesM.f90',
                'Post/usurp/GetUserInputM.f90',
                'Post/usurp/LoadPanelsM.f90',
                'Post/usurp/LoadPanelsNPHASEM.f90',
                'Post/usurp/MapTriQM.f90',
                'Post/usurp/OutputForcesAndMomentsM.f90',
                'Post/usurp/OutputOVERFLOWM.f90',
                'Post/usurp/PreReadBCinM.f90',
                'Post/usurp/PreReadBCSM.f90',
                'Post/usurp/PreReadGenericM.f90',
                'Post/usurp/PreReadNPHASEM.f90',
                'Post/usurp/PreReadOVERFLOWM.f90',
                'Post/usurp/PreReadUNCLEMM.f90',
                'Post/usurp/ReadPanelWeightsM.f90',
                'Post/usurp/ResolveEdgeIntersectionsM.f90',
                'Post/usurp/ShrinkVertexListM.f90',
                'Post/usurp/TecplotNPHASEM.f90',
                'Post/usurp/BuildGraphM.f90',
                'Post/usurp/GarbageCollectorM.f90',
                'Post/usurp/ProcessPairProceduresM.f90',
                'Post/usurp/TriQuadM.f90',
                'Post/usurp/CreateTrianglesM.f90',
                'Post/usurp/DeallocatePanelsM.f90',
                'Post/usurp/DetermineSurfaceOverlapM.f90',
                'Post/usurp/RTreeProceduresM.f90',
                'Post/usurp/Usurp.f90']

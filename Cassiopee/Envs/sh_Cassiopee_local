#! /bin/sh
# *Cassiopee* machine specific (local) variables

# Preliminary checks
unset ELSAPROD
if [ "$CASSIOPEE" = "" ]; then
    echo "You must specify a CASSIOPEE variable in your environment."
    echo "This variable specifies the installation path of *Cassiopee*."
    exit
fi

# Environment
ulimit -s unlimited

# Compilation on different machines:

# Detect machine (shortest first)
KC=$(uname -n)
if echo "$KC" | grep -q 'n'; then export MAC="sator_cas"; fi
if echo "$KC" | grep -q 'ld'; then export MAC="ld"; fi
if echo "$KC" | grep -q 'f0'; then export MAC="juno"; fi
if echo "$KC" | grep -q 'n0'; then export MAC="juno"; fi
if echo "$KC" | grep -q 'b0'; then export MAC="juno"; fi
if echo "$KC" | grep -q 'v0'; then export MAC="juno"; fi
if echo "$KC" | grep -q 'fv-az'; then export MAC="azure"; fi
if echo "$KC" | grep -q 'clausius'; then export MAC="ld"; fi
if echo "$KC" | grep -q 'ubuntu'; then export MAC="ubuntu"; fi
if echo "$KC" | grep -q 'visio'; then export MAC="visio"; fi
if echo "$KC" | grep -q 'austri'; then export MAC="austri"; fi
if echo "$KC" | grep -q 'celeste'; then export MAC="visio"; fi
if echo "$KC" | grep -q 'visung'; then export MAC="visung"; fi
if echo "$KC" | grep -q 'giulia'; then export MAC="giulia"; fi
if echo "$KC" | grep -q 'sator'; then export MAC="sator_cas"; fi
if echo "$KC" | grep -q 'spiro'; then export MAC="spiro_el8"; fi
if echo "$KC" | grep -q 'cobalt'; then export MAC="cobalt"; fi
if echo "$KC" | grep -q 'irene'; then export MAC="irene"; fi
if echo "$KC" | grep -q 'jean-zay'; then export MAC="jean-zay"; fi
if echo "$KC" | grep -q 'node6.cluster'; then export MAC="macosx"; fi
if echo "$KC" | grep -q 'topaze'; then export MAC="topaze"; fi
if echo "$KC" | grep -q 'Aryen'; then export MAC="aryen"; fi
if echo "$KC" | grep -q 'WDAAA161Z'; then export MAC="WDAAA161Z"; fi

# Detect MAC environement from MACHINE
EXT=""
if [ -n "$MACHINE" ]; then
    INTTYPE=""
    DBGMODE=""
    BRANCHNAME=""
    MACHINETMP=$MACHINE
    if [ "${MACHINETMP#*_DBG*}" != "$MACHINETMP" ]; then
        MACHINETMP="${MACHINETMP//_DBG/}"
        DBGMODE="_DBG"
    fi

    if [ "${MACHINETMP#*_i8*}" != "$MACHINETMP" ]; then
        MACHINETMP="${MACHINETMP//_i8/}"
        INTTYPE="_i8"
    fi
    
    if [ "${MACHINETMP#*_b-*}" != "$MACHINETMP" ]; then
        BRANCHNAME=${MACHINETMP#*_b-$BRANCHNAME}
        BRANCHNAME=${BRANCHNAME%_*}
        MACHINETMP="${MACHINETMP//_b-$BRANCHNAME/}"
        MACHINETMP=${MACHINETMP%_}
        BRANCHNAME="_$BRANCHNAME"
    fi
    
    export MAC=$MACHINETMP
    EXT=$BRANCHNAME$INTTYPE$DBGMODE
    unset MACHINETMP BRANCHNAME INTTYPE DBGMODE
fi

if [ -z "$MAC" ]; then
    echo 'Your machine is not known by uname. Try to set MACHINE.'
    return 1
fi


# ----------------------------- Prods ------------------------------------------
if [ "$MAC" = "ld_eos8" ]; then
#------------------------------- ld centos 8 + python 3 -----------------------------------
    export ELSAPROD=eos8_r8
    export ELSAPROD=$ELSAPROD$EXT
    #module unload $(module -t list 2>&1 | grep -i intel)
    #module purge
    module unload intel/19.0.5
    module unload impi/19.0.5
    #module load oce/7.5.0-gnu831
    module load occt/7.6.1-gnu831
    module load python/3.6.1-gnu831
    #module load python/3.10.8-gnu831
    module load intel/21.2.0
    #module load impi/21.2.0
    module load hdf5/1.8.17-intel2120
    unset I_MPI_PMI_LIBRARY
    export PYTHONEXE=python3
    # Nbre de threads
    ncpu=$(grep processor /proc/cpuinfo | tail -1 | cut -f2 -d: )
    ncpu=$((ncpu + 1))
    export OMP_NUM_THREADS=$ncpu

elif [ "$MAC" = "ld" ]; then
#------------------------------- ld rocky 8 + python 3 -----------------------------------
    export ELSAPROD=ld
    export ELSAPROD=$ELSAPROD$EXT
    . /etc/profile.d/modules-onera.sh
    module purge
    module load occt/7.6.1-gnu831
    module load python/3.8.14-gnu831
    module load gcc/10.2.0
    module load lapack/3.9.1-gnu831
    module load hdf5/1.10.5-gnu831-ompi405
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    export PYTHONEXE=python3
    # Nbre de threads
    ncpu=$(grep processor /proc/cpuinfo | tail -1 | cut -f2 -d: )
    ncpu=$((ncpu + 1))
    export OMP_NUM_THREADS=$ncpu
    export ASAN_OPTIONS=verify_asan_link_order=false
    export LSAN_OPTIONS=suppressions=$CASSIOPEE/Dist/bin/"$ELSAPROD"/asan.supp:print_suppressions=0
    export ASAN_LIB=/opt/tools/gcc/10.2.0-gnu831/lib64/libasan.so

elif [ "$MAC" = "ld_spack1" ]; then
#------------------------------- ld spack1 + python 3.10 ----------------------------------
    export ELSAPROD=ld_spack1
    export ELSAPROD=$ELSAPROD$EXT
    . /etc/profile.d/modules-onera.sh
    module purge
    export PATH="/tmp_user/ldaaa2323z/benoit/spack_installed/install/bin":"/tmp_user/ldaaa2323z/benoit/spack/var/spack/environments/test/.spack-env/view/bin":"/tmp_user/ldaaa2323z/benoit/spack/bin":"/usr/local/sbin":"/usr/bin:/usr/sbin:/usr/local/bin"
    export LD_LIBRARY_PATH=/tmp_user/ldaaa2323z/benoit/spack_installed/install/lib:/tmp_user/ldaaa2323z/benoit/spack_installed/install/lib64:/tmp_user/ldaaa2323z/benoit/spack/var/spack/environments/test/.spack-env/view/lib:/tmp_user/ldaaa2323z/benoit/spack/var/spack/environments/test/.spack-env/view/lib64
    export PYTHONPATH=/tmp_user/ldaaa2323z/benoit/spack_installed/install/lib/python3.10/site-packages:/tmp_user/ldaaa2323z/benoit/spack/var/spack/environments/test/.spack-env/view/lib/python3.10/site-packages
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    export PYTHONEXE=python3
    # Nbre de threads
    ncpu=$(grep processor /proc/cpuinfo | tail -1 | cut -f2 -d: )
    ncpu=$((ncpu + 1))
    export OMP_NUM_THREADS=$ncpu

elif [ "$MAC" = "ld_spack2" ]; then
#------------------------------- ld spack2 + python 3.9 ----------------------------------
    export ELSAPROD=ld_spack2
    export ELSAPROD=$ELSAPROD$EXT
    . /etc/profile.d/modules-onera.sh
    module purge
    export PATH="/tmp_user/ldaaa2323z/benoit/spack_installed/install2/bin":"/tmp_user/ldaaa2323z/benoit/spack/var/spack/environments/dassault/.spack-env/view/bin":"/tmp_user/ldaaa2323z/benoit/spack/bin":"/usr/local/sbin":"/usr/bin:/usr/sbin:/usr/local/bin"
    export LD_LIBRARY_PATH=/tmp_user/ldaaa2323z/benoit/spack_installed/install2/compiler/2021.4.0/linux/lib:/tmp_user/ldaaa2323z/benoit/spack_installed/install2/compiler/2021.4.0/linux/lib/x64:/tmp_user/ldaaa2323z/benoit/spack_installed/install2/compiler/2021.4.0/linux/lib/emu:/tmp_user/ldaaa2323z/benoit/spack_installed/install2/compiler/2021.4.0/linux/lib/oclfpga/host/linux64/lib:/tmp_user/ldaaa2323z/benoit/spack_installed/install2/compiler/2021.4.0/linux/lib/oclfpga/linux64/lib:/tmp_user/ldaaa2323z/benoit/spack_installed/install2/compiler/2021.4.0/linux/compiler/lib/intel64_lin:/tmp_user/ldaaa2323z/benoit/spack_installed/install2/mpi/2021.4.0/libfabric/lib:/tmp_user/ldaaa2323z/benoit/spack_installed/install2/mpi/2021.4.0/lib/release:/tmp_user/ldaaa2323z/benoit/spack_installed/install2/mpi/2021.4.0/lib:/tmp_user/ldaaa2323z/benoit/spack_installed/install2/lib:/tmp_user/ldaaa2323z/benoit/spack_installed/install2/lib64
    export PYTHONPATH=/tmp_user/ldaaa2323z/benoit/spack_installed/install2/lib/python3.9/site-packages:/tmp_user/ldaaa2323z/benoit/spack/var/spack/environments/dassault/.spack-env/view/lib/python3.9/site-packages
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    export PYTHONEXE=python3
    # Nbre de threads
    ncpu=$(grep processor /proc/cpuinfo | tail -1 | cut -f2 -d: )
    ncpu=$((ncpu + 1))
    export OMP_NUM_THREADS=$ncpu
    
elif [ "$MAC" = "ld_python2" ]; then
#------------------------------- ld centos 7 -----------------------------------
    export ELSAPROD=x86_r8
    export ELSAPROD=$ELSAPROD$EXT
    module unload $(module -t list 2>&1 | grep -i intel)
    module load python/2.7.8
    module load intel/17.0.4
    module load impi/17
    module load hdf5/1.8.8
    # Nbre de threads
    ncpu=$(grep processor /proc/cpuinfo | tail -1 | cut -f2 -d: )
    ncpu=$((ncpu + 1))
    export OMP_NUM_THREADS=$ncpu
    #export KMP_AFFINITY="verbose,granularity=fine,proclist=[0,1,2,3],explicit"
    # chemin de mpirun (forced)
    # Pour utilisation MKL+numpy
    #export LD_PRELOAD=/opt/tools/intel/studio/2017/mkl/lib/intel64/libmkl_avx2.so:/opt/tools/intel/studio/2017/mkl/lib/intel64/libmkl_def.so:/opt/tools/intel/studio/2017/mkl/lib/intel64/libmkl_core.so:/opt/tools/intel/studio/2017/mkl/lib/intel64/libmkl_intel_lp64.so:/opt/tools/intel/studio/2017/mkl/lib/intel64/libmkl_intel_thread.so:/opt/tools/intel/studio/2017/lib/intel64/libiomp5.so

elif [ "$MAC" = "macosx" ]; then
#----------------------------- Mac OSX-----------------------------------------
    export ELSAPROD=macosx
    export ELSAPROD=$ELSAPROD$EXT
    export OMP_NUM_THREADS=2
    export MACOSX_DEPLOYMENT_TARGET=10.10
    unset BUNDLE
    export DYLD_LIBRARY_PATH=$LD_LIBRARY_PATHL

elif [ "$MAC" = "ubuntu" ]; then
#-------------------------------- ubuntu --------------------------------------
    export ELSAPROD=ubuntu
    export ELSAPROD=$ELSAPROD$EXT
    export OMP_NUM_THREADS=4
    export PYTHONEXE=python3
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    export ASAN_OPTIONS=verify_asan_link_order=false
    export LSAN_OPTIONS=suppressions=$CASSIOPEE/Dist/bin/"$ELSAPROD"/asan.supp:print_suppressions=0
    export ASAN_LIB=/usr/lib/gcc/x86_64-linux-gnu/13/libasan.so
    ulimit -s 8192 # for ASAN

elif [ "$MAC" = "azure" ]; then
#------------------------ azure: Centos7 - github actions ----------------------
    export ELSAPROD=azure
    export ELSAPROD=$ELSAPROD$EXT
    export OMP_NUM_THREADS=4
    export PYTHONEXE=python3
    export PRODMODE=2
    export PIP_DISABLE_PIP_VERSION_CHECK=1

elif [ "$MAC" = "linux" ]; then
#------------------------ generic linux --------------------------------------
    export ELSAPROD=linux
    export ELSAPROD=$ELSAPROD$EXT
    export OMP_NUM_THREADS=4
    export PYTHONEXE=python3
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1

elif [ "$MAC" = "visio" ]; then
#----------------------------- visio -----------------------------------------
    export ELSAPROD=vis_r8
    export ELSAPROD=$ELSAPROD$EXT
    . /etc/profile.d/modules-dri.sh
    module load subversion/1.7.6
    module load python/2.7.8
    module unload $(module -t list 2>&1 | grep -i intel)
    module load gcc/4.8.1
    module load intel/17.0.4
    module load impi/17
    # Nombre de threads
    export OMP_NUM_THREADS=16

elif [ "$MAC" = "spiro_gcc" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_gcc
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    module purge
    module load occt/7.6.1-gnu831
    #module load python/3.6.1-gnu831
    module load python/3.10.8-gnu831
    module load gcc/10.2.0
    module load hdf5/1.10.5-gnu831-ompi405
    export PYTHONEXE=python3
    export PRODMODE=1
    unset $(env | grep SLURM | cut -d'=' -f 1)
    unset OMP_PLACES
    
elif [ "$MAC" = "visung_gcc" ]; then
#----------------------------- visung_gcc -------------------------------------
    export ELSAPROD=visung_gcc
    export ELSAPROD=$ELSAPROD$EXT
    . /etc/profile.d/modules-onera.sh
    module purge
    module load lapack/3.9.1-gnu831
    module load occt/7.6.1-gnu831
    module load socle-cfd/7.0-gnu850-ompi502
    module load subversion/1.14.1-gnu831
    module load emacs/27.2-gnu831
    export PYTHONEXE=python3
    export OMP_NUM_THREADS=72
    export PRODMODE=1

elif [ "$MAC" = "visung" ]; then
#----------------------------- visung -----------------------------------------
    export ELSAPROD=visung
    export ELSAPROD=$ELSAPROD$EXT
    #. /etc/profile.d/modules-dri.sh
    module purge
    module load occt/7.6.1-gnu831
    module load emacs/27.2-gnu831
    module load subversion/1.14.1-gnu831
    module load socle-cfd/6.0-intel2220-impi
    export PYTHONEXE=python3
    export OMP_NUM_THREADS=72
    export PRODMODE=1
    export I_MPI_FABRICS=shm

elif [ "$MAC" = "austri" ]; then
#----------------------------- austri -----------------------------------------
    export ELSAPROD=aus_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    export KMP_AFFINITY="verbose,granularity=fine,proclist=[0,2,4,6,8,10,12,14,16,18,20,22,1,3,5,7,9,11,13,15,17,19,21,23],explicit"
    #export KMP_AFFINITY="verbose,granularity=fine,proclist=[0,1,2,3,4,5,6,7,8,9,10,11],explicit"
    # modules
    module unload $(module -t list 2>&1 | grep -i intel)
    module load gcc/4.9
    module load intel/17.0.4
    module load impi/17 # very bad install
    module unload impi/17
    module load hdf5/1.8.8-intel-11

elif [ "$MAC" = "giulia" ]; then
#----------------------------- giulia -----------------------------------------
    export ELSAPROD=giu_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    ncpu=$(grep processor /proc/cpuinfo |tail -1 |cut -f2 -d: )
    ncpu=$((ncpu + 1 ))
    export OMP_NUM_THREADS=$ncpu
    module unload $(module -t list 2>&1 | grep -i intel)
    module load gcc/5.2
    module load python/2.7.8
    module load intel/17.0.4
    module load impi/16
    module unload hdf5/1.8.8
    module load hdf5/1.8.8-intel-16.impi
    #module purge
    #module load   python/2.7.8
    #source /stck/nalferez/intel/parallel_studio_xe_2018/psxevars.sh
    #export PATH=/stck5/nalferez/intel/2018update2/PythonIntel/intelpython2/bin/:/usr/local/python-gnu-2.7.8/bin/:$PATH

elif [ "$MAC" = "cobalt" ]; then
#-------------------------------- cobalt -----------------------------------------
    export ELSAPROD=cob_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=28
    module purge
    module load intel/17.0.6.256
    module load mpi/openmpi
    module load python/2.7.14
    module load hdf5/1.8.20
    module load libosmesa/10.6.5
    module load libpng/1.6.23

elif [ "$MAC" = "tgcc_irene" ]; then
#-------------------------------- irene -----------------------------------------
    export ELSAPROD=irene_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    module purge
    module load intel/20
    module load mpi/openmpi
    module load python/2.7.14
    module load hdf5/1.8.20
    #module load scons/3.0.1

elif [ "$MAC" = "jean-zay" ]; then
#-------------------------------- jean-zay -----------------------------------------
    export ELSAPROD=jz_r8
    export ELSAPROD=$ELSAPROD$EXT
    module load python/3.8.2
    module load gcc/9.1.0-cuda-openacc
    module load openmpi/4.1.1-cuda
    module load hdf5/1.10.5
    export PYTHONEXE=python3
    # Number of threads
    export OMP_NUM_THREADS=28

elif [ "$MAC" = "spiro" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    . /usr/local/Modules/init/bash
    module unload $(module -t list 2>&1 | grep -i intel)
    module unload impi/17
    #module load CFD/4.0-intel-17.impi
    module load intel/17.0.4
    module load impi/17
    module load hdf5/1.8.17-intel-17
    module load python/3.6.1
    module unload hdf5/1.8.8
    module load subversion/1.14.1-gnu830
    export PYTHONEXE=python3

elif [ "$MAC" = "spiro_sky" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_sky_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    . /usr/local/Modules/init/bash
    module unload $(module -t list 2>&1 | grep -i intel)
    module unload impi/17
    #module load CFD/4.0-intel-17.impi
    module load intel/17.0.4
    module load impi/17
    module load hdf5/1.8.17-intel-17
    module load python/3.6.1
    module unload hdf5/1.8.8
    export PYTHONEXE=python3

elif [ "$MAC" = "spiro_cas" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_cas_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    . /usr/local/Modules/init/bash
    module unload $(module -t list 2>&1 | grep -i intel)
    module unload impi/17
    #module load CFD/4.0-intel-17.impi
    module load intel/17.0.4
    module load impi/17
    module load hdf5/1.8.17-intel-17
    module load python/3.6.1
    module unload hdf5/1.8.8
    export PYTHONEXE=python3

elif [ "$MAC" = "spiro_amdRM" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_amdrm_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=32
    . /usr/local/Modules/init/bash
    module unload $(module -t list 2>&1 | grep -i intel)
    module unload impi/17
    module load intel/17.0.4
    module load impi/17
    module load hdf5/1.8.17-intel-17
    module load python/3.6.1
    module unload hdf5/1.8.8
    export PYTHONEXE=python3

elif [ "$MAC" = "spiro_amdNP" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_amdnp_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=32
    . /usr/local/Modules/init/bash
    module unload $(module -t list 2>&1 | grep -i intel)
    module unload impi/17
    module load intel/17.0.4
    module load impi/17
    module load hdf5/1.8.17-intel-17
    module load python/3.6.1
    module unload hdf5/1.8.8
    export PYTHONEXE=python3

elif [ "$MAC" = "spiro_socle6" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_socle_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    #. /usr/local/Modules/init/bash
    module purge
    module load socle-cfd/6.0-intel2220-impi
    module load occt/7.6.1-gnu831
    module load subversion/1.14.1-gnu831
    export PYTHONEXE=python3
    export PRODMODE=1

elif [ "$MAC" = "spiro_sonics" ]; then
#----------------------------- spiro sonics -----------------------------------------
    export ELSAPROD=linux64
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    . /etc/profile.d/modules-onera.sh
    module purge
    source /scratchm/sonics/dist/spiro-el8.sh --compiler=intel@2022 --mpi=impi
    module load emacs
    export PYTHONEXE=python3

elif [ "$MAC" = "spiro_python2" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    . /usr/local/Modules/init/bash
    module unload $(module -t list 2>&1 | grep -i intel)
    #module load CFD/4.0-intel-17.impi
    module load python/2.7.8-intel-17.impi
    module load intel/17.0.4
    module load impi/17
    module load hdf5/1.8.17-intel-17

elif [ "$MAC" = "spiro_anaconda" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_acda
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    . /usr/local/Modules/init/bash
    module unload $(module -t list 2>&1 | grep -i intel)
    module unload impi/17
    #module load CFD/4.0-intel-17.impi
    module load intel/17.0.4
    module load impi/17
    module unload hdf5/1.8.8
    module load hdf5/1.8.17-intel-17
    module load anaconda/2021.05
    module load subversion/1.14.1-gnu830
    export PYTHONEXE=python3

elif [ "$MAC" = "spiro_el8" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_el8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    # modules
    source /opt/tools/Modules/init/bash
    module purge
    module load socle-cfd/5.0-intel2120-impi
    #module load socle-cfd/6.0-intel2220-impi
    module load occt/7.6.1-gnu831
    module load subversion/1.14.1-gnu831
    module load emacs/27.2-gnu831
    alias inspxe-cl="/opt/tools/intel/oneapi/inspector/2021.2.0/bin64/inspxe-cl -r result -collect mi3 -- python3 "
    alias inspxe-cl2="/opt/tools/intel/oneapi/inspector/2021.2.0/bin64/inspxe-cl -r result -collect ti3 -- python3 "
    alias inspxe-gui="/opt/tools/intel/oneapi/inspector/2021.2.0/bin64/inspxe-gui result"
    alias vtune="vtune -collect hotspots -result-dir result -quiet"
    export PYTHONEXE=python3
    export PRODMODE=0
    unset I_MPI_FABRICS_LIST
    unset I_MPI_FABRICS
    unset I_MPI_TCP_NETMASK
    unset I_MPI_PMI_LIBRARY
    unset $(env | grep SLURM | cut -d'=' -f 1)
    unset OMP_PLACES

elif [ "$MAC" = "spiro_intel" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_intel
    export ELSAPROD=$ELSAPROD$EXT
    echo $ELSAPROD
    # Nbre de threads
    export OMP_NUM_THREADS=24
    module purge
    module load intel/19.0.5
    module load occt/7.6.1-gnu831
    module load python/3.6.1-gnu831
    module load hdf5/1.10.3-intel1905
    export PYTHONEXE=python3

elif [ "$MAC" = "spiro_coda" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_coda
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    module purge
    source /stck/rhea/dist/spiro_v2023_10/source.sh --env coda_dev --compiler gcc@10 --mpi openmpi
    #module load hdf5/1.10.5-gnu831-ompi405
    module load subversion/1.14.1-gnu831
    export PYTHONEXE=python3

elif [ "$MAC" = "spiro_arm" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_arm
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=56
    export PYTHONEXE=python3

elif [ "$MAC" = "spiro_pgi" ]; then
#----------------------------- spiro -----------------------------------------
    export ELSAPROD=spiro_pgi
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=24
    export PYTHONEXE=python3
    module purge
    module load python/3.6.1-gnu831
    module load nvhpc/22.2-gnu831-full
    module load subversion/1.14.1-gnu831

elif [ "$MAC" = "spiro_gpu" ]; then
#----------------------------- spiro gpu ------------------------------------
    export ELSAPROD=spiro_gpu
    export ELSAPROD=$ELSAPROD$EXT
    source /opt/tools/Modules/init/bash
    module purge
    module load python/3.12.2-gnu850
    module load nvhpc/23.7-gnu850-full
    module load hdf5/1.10.5-gnu831-ompi405
    # Set next two lines only if python is not python
    export PYTHONEXE=python3
    # Number of threads
    export OMP_NUM_THREADS=48
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    unset $(env | grep SLURM | cut -d'=' -f 1)
    unset OMP_PLACES

elif [ "$MAC" = "juno" ]; then
#----------------------------- juno -----------------------------------------
    export ELSAPROD=juno
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=48
    source /opt/tools/Modules/init/bash
    module purge
    module load socle-cfd/6.0-intel2220-impi
    module load occt/7.6.1-gnu831
    module load subversion/1.14.1-gnu831
    module load emacs/27.2-gnu831
    module load texlive/2021
    alias inspxe-cl="/opt/tools/intel/oneapi/inspector/2021.2.0/bin64/inspxe-cl -r result -collect mi3 -- python3 "
    alias inspxe-cl2="/opt/tools/intel/oneapi/inspector/2021.2.0/bin64/inspxe-cl -r result -collect ti3 -- python3 "
    alias inspxe-gui="/opt/tools/intel/oneapi/inspector/2021.2.0/bin64/inspxe-gui result"
    alias vtune="vtune -collect hotspots -result-dir result -quiet"
    export PYTHONEXE=python3
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    unset I_MPI_FABRICS_LIST
    unset I_MPI_FABRICS
    unset I_MPI_TCP_NETMASK
    unset I_MPI_PMI_LIBRARY
    unset I_MPI_HYDRA_BOOTSTRAP_EXEC_EXTRA_ARGS I_MPI_HYDRA_BOOTSTRAP HYDRA_BOOTSTRAP
    unset $(env | grep SLURM | cut -d'=' -f 1)
    unset OMP_PLACES

elif [ "$MAC" = "juno_gcc" ]; then
#----------------------------- juno gcc ---------------------------------------
    export ELSAPROD=juno_gcc
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=48
    # modules
    source /opt/tools/Modules/init/bash
    module purge
    #module load gcc/10.2.0
    #module load python/3.10.8-gnu831
    #module load hdf5/1.10.5-gnu831-ompi405
    module load lapack/3.9.1-gnu831
    module load occt/7.6.1-gnu831
    module load socle-cfd/7.0-gnu850-ompi502
    module load subversion/1.14.1-gnu831
    module load emacs/27.2-gnu831
    export PYTHONEXE=python3
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    unset $(env | grep SLURM | cut -d'=' -f 1)
    unset OMP_PLACES
    export ASAN_OPTIONS=verify_asan_link_order=false
    export LSAN_OPTIONS=suppressions=$CASSIOPEE/Dist/bin/"$ELSAPROD"/asan.supp:print_suppressions=0
    export ASAN_LIB=/opt/tools/gcc/12.1.0-gnu850/lib64/libasan.so

elif [ "$MAC" = "juno_gpu" ]; then
#----------------------------- juno gpu ------------------------------------
    export ELSAPROD=juno_gpu
    export ELSAPROD=$ELSAPROD$EXT
    source /opt/tools/Modules/init/bash
    module purge
    module load python/3.12.2-gnu850
    module load nvhpc/23.7-gnu850-full
    module load hdf5/1.10.5-gnu831-ompi405
    export PYTHONEXE=python3
    # Number of threads
    export OMP_NUM_THREADS=48
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    unset $(env | grep SLURM | cut -d'=' -f 1)
    unset OMP_PLACES

elif [ "$MAC" = "juno_coda" ]; then
#----------------------------- juno -----------------------------------------
    export ELSAPROD=juno_coda
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=48
    #. /etc/profile.d/modules-onera.sh
    export MODULEPATH=/stck/rhea/coda_modules:$MODULEPATH
    CASSIOPEESAVE=$CASSIOPEE
    ELSAPRODSAVE=$ELSAPROD
    module purge
    module load fssuite/2025.02.0-gnu1210
    export CASSIOPEE=$CASSIOPEESAVE
    export ELSAPROD=$ELSAPRODSAVE
    module load lapack/3.9.1-gnu831
    module load occt/7.6.1-gnu831
    export PYTHONEXE=python3
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    unset $(env | grep SLURM | cut -d'=' -f 1)
    unset OMP_PLACES
    #export OMP_DISPLAY_ENV=VERBOSE
    export ASAN_OPTIONS=verify_asan_link_order=false
    export LSAN_OPTIONS=suppressions=$CASSIOPEE/Dist/bin/"$ELSAPROD"/asan.supp:print_suppressions=0
    export ASAN_LIB=/opt/tools/gcc/12.1.0-gnu831/lib64/libasan.so

elif [ "$MAC" = "sator_brw" ]; then
#----------------------------- sator for broadwell -----------------------------------------
    export ELSAPROD=sat_r8
    export ELSAPROD=$ELSAPROD$EXT
    . /etc/profile.d/module.sh
    module purge
    module load python/3.7.4-intel2120
    module load hdf5/1.10.5-intel2120-impi
    module load subversion/1.14.1-gnu831
    module load emacs/27.2-gnu831
    module load occt/7.6.1-gnu831
    unset I_MPI_PMI_LIBRARY
    export PYTHONEXE=python3
    alias ffmpeg=/opt/tools/altair/2021.1/altair/hwdesktop/hw/bin/linux64/ffmpeg
    # Number of threads
    export OMP_NUM_THREADS=28
    export KMP_AFFINITY="compact,1,0,granularity=fine,verbose"
    export OMP_PLACES=cores

elif [ "$MAC" = "topaze" ]; then
#----------------------------- topaze ccrt proc amd milan ---------------------------------------
    export ELSAPROD=topaze_r8
    export ELSAPROD=$ELSAPROD$EXT
    . /etc/profile.d/module.sh
    module purge
    module load intel/20 mpi/openmpi/4 flavor/hdf5/parallel hdf5/1.8.20
    module load python3/3.8.10
    module load scons/4.4.0
    export LD_PRELOAD=/ccc/products2/icc-20.0.0/Rhel_8__x86_64/system/default/compilers_and_libraries_2020.0.166/linux/compiler/lib/intel64_lin/libiomp5.so
    unset I_MPI_PMI_LIBRARY
    # Set next two lines only if python is not python
    export PYTHONEXE=python3
    # Number of threads
    export OMP_NUM_THREADS=64
    export KMP_AFFINITY=verbose
    export OMP_PLACES=cores

elif [ "$MAC" = "sator_sky" ]; then
#----------------------------- sator skylake ---------------------------------------
    export ELSAPROD=sat_sky_r8
    export ELSAPROD=$ELSAPROD$EXT
    . /etc/profile.d/module.sh
    module purge
    #module load socle-cfd/5.0-intel2120-impi
    module load python/3.7.4-intel2120
    module load hdf5/1.10.5-intel2120-impi
    module load subversion/1.14.1-gnu831
    module load emacs/27.2-gnu831
    module load occt/7.6.1-gnu831
    unset I_MPI_PMI_LIBRARY
    export PYTHONEXE=python3
    # Number of threads
    export OMP_NUM_THREADS=44
    export OMP_PLACES=cores

elif [ "$MAC" = "sator_cas" ]; then
#----------------------------- sator for cascade ---------------------------------------
    export ELSAPROD=sat_cas_r8
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=48
    export KMP_AFFINITY="compact,1,0,granularity=fine,verbose"
    export OMP_PLACES=cores
    . /etc/profile.d/module.sh
    module purge
    #module load socle-cfd/5.0-intel2120-impi
    module load python/3.7.4-intel2120
    module load hdf5/1.10.5-intel2120-impi
    module load subversion/1.14.1-gnu831
    module load emacs/27.2-gnu831
    module load occt/7.6.1-gnu831
    unset I_MPI_PMI_LIBRARY
    export PYTHONEXE=python3
    # Other aliases
    alias ffmpeg=/opt/tools/altair/2021.1/altair/hwdesktop/hw/bin/linux64/ffmpeg

elif [ "$MAC" = "sator_sph" ]; then
#----------------------------- sator for saphire ---------------------------------------
    export ELSAPROD=sat_sph
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=48
    module purge
    module load socle-cfd/6.0-intel2220-impi
    module load occt/7.6.1-gnu831
    module load emacs/27.2-gnu831
    unset I_MPI_FABRICS_LIST
    unset I_MPI_FABRICS
    unset I_MPI_PMI_LIBRARY
    unset I_MPI_TCP_NETMASK
    export OMP_PLACES=cores
    export PYTHONEXE=python3
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    
elif [ "$MAC" = "sator_gcc" ]; then
#----------------------------- sator gcc ---------------------------------------
    export ELSAPROD=sat_gcc
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=48
    source /opt/tools/Modules/init/bash
    module purge
    module load socle-cfd/7.0-gnu850-ompi502
    module load occt/7.6.1-gnu831
    module load subversion/1.14.1-gnu831
    module load emacs/27.2-gnu831
    export OMP_PLACES=cores
    export PYTHONEXE=python3
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1
    export ASAN_OPTIONS=verify_asan_link_order=false
    export LSAN_OPTIONS=suppressions=$CASSIOPEE/Dist/bin/"$ELSAPROD"/asan.supp:print_suppressions=0
    export ASAN_LIB=/opt/tools/gcc/12.1.0-gnu831/lib64/libasan.so

elif [ "$MAC" = "adastra_cpu" ]; then
#----------------------------- adastra cpu  ---------------------------------------
    export ELSAPROD=adastra_cpu
    export ELSAPROD=$ELSAPROD$EXT
    export OMP_NUM_THREADS=48
    export OMP_PLACES=cores
    export PRODMODE=1
    module purge
    # CPU craycc
    #module load craype-x86-genoa
    #module load PrgEnv-cray
    #module load cray-mpich/8.1.28
    #module load cray-libsci/23.05.1.4
    #module load CCE-CPU-3.1.0
    # CPU GCC
    module load PrgEnv-gnu
    export LD_LIBRARY_PATH="/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12":$LD_LIBRARY_PATH
    module load cray-python/3.11.5
    module load cray-hdf5-parallel/1.12.2.5
    export LD_LIBRARY_PATH="$CRAY_LD_LIBRARY_PATH":"$LD_LIBRARY_PATH"
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH":"/opt/cray/pe/python/3.11.5/lib"
    export PYTHONEXE=python3

elif [ "$MAC" = "adastra_gpu" ]; then
#----------------------------- adastra gpu  ---------------------------------------
    export ELSAPROD=adastra_gpu
    export ELSAPROD=$ELSAPROD$EXT
    export OMP_NUM_THREADS=12
    export OMP_PLACES=cores
    export PRODMODE=1
    #module purge
    #module load CCE-GPU-3.1.0
    #module load rocm
    #module load cray-python/3.11.5
    #module load cray-hdf5-parallel/1.12.2.5
    module purge
    module load cpe/23.12
    module load craype-accel-amd-gfx90a craype-x86-trento
    module load PrgEnv-cray
    module load rocm
    module load cray-python/3.11.5
    module load cray-hdf5-parallel/1.12.2.5
    #export LD_LIBRARY_PATH="$CRAY_LD_LIBRARY_PATH":"$LD_LIBRARY_PATH"
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH":"/opt/cray/pe/python/3.11.5/lib"
    export PYTHONEXE=python3
    
elif [ "$MAC" = "aryen" ]; then
#----------------------------- Aryen msys2  ---------------------------------------
    export ELSAPROD=win64
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=2
    export PYTHONEXE=python3
    export PRODMODE=1

elif [ "$MAC" = "WDAAA161Z" ]; then
#----------------------------- msys64 "AlainRE"  ---------------------------------------
    export ELSAPROD=win64
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=4
    export PYTHONEXE=python3
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1

elif [ "$MAC" = "msys2" ]; then
#----------------------------- msys2 (generic)  ---------------------------------------
    export ELSAPROD=win64
    export ELSAPROD=$ELSAPROD$EXT
    # Nbre de threads
    export OMP_NUM_THREADS=4
    export PYTHONEXE=python3
    export PRODMODE=1
    export PIP_DISABLE_PIP_VERSION_CHECK=1

fi

#-------------------------- Common to all prods --------------------------------
# Chemin de l'executable python
if ! [ -z $PATHL ]; then
    OLD_PATHL=$PATHL
    OLD_LD_LIBRARY_PATHL=$LD_LIBRARY_PATHL
    OLD_PYTHONPATHL=$PYTHONPATHL
fi

if [ "$PYTHONEXE" = "python3" ]; then
    pyversion="python"`python3 -c "import sys; print('.'.join(str(n) for n in sys.version_info[:2]))"`
    alias python=python3
else
    pyversion="python"`python -c "import sys; print('.'.join(str(n) for n in sys.version_info[:2]))"`
fi
# Detect if pyenv is used
pyenv=$($PYTHONEXE -c 'import sys; print("pyenv" in sys.executable)' 2>/dev/null)

pylib="lib"
if [ "$MAC" = "ubuntu" ] && [ "$pyenv" == "False" ]; then
    pylib="local/"$pylib
    pysite="dist-packages"
else
    pysite="site-packages"
fi

export PATHL=$CASSIOPEE/Dist/bin/"$ELSAPROD":$CASSIOPEE/Dist/bin/"$ELSAPROD"/bin
export LD_LIBRARY_PATHL=$CASSIOPEE/Dist/bin/"$ELSAPROD":$CASSIOPEE/Dist/bin/"$ELSAPROD"/"$pylib"
export PYTHONPATHL=$CASSIOPEE/Dist/bin/"$ELSAPROD":$CASSIOPEE/Dist/bin/"$ELSAPROD"/"$pylib"/"$pyversion"/"$pysite"

if ! [ -z $OLD_PATHL ]; then
    # Remove all occurences of old paths
    PATH="${PATH//$OLD_PATHL/}"
    LD_LIBRARY_PATH="${LD_LIBRARY_PATH//$OLD_LD_LIBRARY_PATHL/}"
    PYTHONPATH="${PYTHONPATH//$OLD_PYTHONPATHL/}"
    
    # Remove empty paths
    PATH=$(echo "$PATH" | sed 's/::\+/:/g; s/^:\|:$//g')
    LD_LIBRARY_PATH=$(echo "$LD_LIBRARY_PATH" | sed 's/::\+/:/g; s/^:\|:$//g')
    PYTHONPATH=$(echo "$PYTHONPATH" | sed 's/::\+/:/g; s/^:\|:$//g')
fi

# Prefix with new paths
if [ -n "$PATH" ]; then
    export PATH=$PATHL:$PATH
else
    export PATH=$PATHL
fi
if [ -n "$LD_LIBRARY_PATH" ]; then
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATHL:$LD_LIBRARY_PATH
else
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATHL
fi
if [ -n "$PYTHONPATH" ]; then
    export PYTHONPATH=$PYTHONPATHL:$PYTHONPATH
else
    export PYTHONPATH=$PYTHONPATHL
fi

echo '>> Hello from '$MAC', '$ELSAPROD' production is set.'
